import { QueryList } from "@angular/core";
import { ColDef } from "ag-grid-community";
import * as ɵngcc0 from '@angular/core';
export declare class AgGridColumn {
    childColumns: QueryList<AgGridColumn>;
    hasChildColumns(): boolean;
    toColDef(): ColDef;
    private getChildColDefs;
    private createColDefFromGridColumn;
    children: any;
    sortingOrder: any;
    allowedAggFuncs: any;
    menuTabs: any;
    cellClassRules: any;
    icons: any;
    headerGroupComponent: any;
    headerGroupComponentFramework: any;
    headerGroupComponentParams: any;
    cellStyle: any;
    cellRendererParams: any;
    cellEditorFramework: any;
    cellEditorParams: any;
    pinnedRowCellRendererFramework: any;
    pinnedRowCellRendererParams: any;
    filterFramework: any;
    filterParams: any;
    headerComponent: any;
    headerComponentFramework: any;
    headerComponentParams: any;
    floatingFilterComponent: any;
    floatingFilterComponentParams: any;
    floatingFilterComponentFramework: any;
    tooltipComponent: any;
    tooltipComponentParams: any;
    tooltipComponentFramework: any;
    refData: any;
    headerName: any;
    columnGroupShow: any;
    headerClass: any;
    toolPanelClass: any;
    headerValueGetter: any;
    groupId: any;
    colId: any;
    sort: any;
    field: any;
    type: any;
    tooltipField: any;
    headerTooltip: any;
    cellClass: any;
    showRowGroup: any;
    filter: any;
    aggFunc: any;
    cellRenderer: any;
    cellEditor: any;
    pinned: any;
    chartDataType: any;
    sortedAt: any;
    flex: any;
    width: any;
    minWidth: any;
    maxWidth: any;
    rowGroupIndex: any;
    pivotIndex: any;
    dndSourceOnRowDrag: any;
    valueGetter: any;
    valueSetter: any;
    filterValueGetter: any;
    keyCreator: any;
    cellRendererFramework: any;
    pinnedRowCellRenderer: any;
    valueFormatter: any;
    pinnedRowValueFormatter: any;
    valueParser: any;
    comparator: any;
    equals: any;
    pivotComparator: any;
    suppressKeyboardEvent: any;
    colSpan: any;
    rowSpan: any;
    getQuickFilterText: any;
    newValueHandler: any;
    onCellValueChanged: any;
    onCellClicked: any;
    onCellDoubleClicked: any;
    onCellContextMenu: any;
    rowDragText: any;
    tooltip: any;
    tooltipValueGetter: any;
    cellRendererSelector: any;
    cellEditorSelector: any;
    suppressCellFlash: any;
    suppressColumnsToolPanel: any;
    suppressFiltersToolPanel: any;
    openByDefault: any;
    marryChildren: any;
    hide: any;
    rowGroup: any;
    pivot: any;
    checkboxSelection: any;
    headerCheckboxSelection: any;
    headerCheckboxSelectionFilteredOnly: any;
    suppressMenu: any;
    suppressSorting: any;
    suppressMovable: any;
    suppressFilter: any;
    lockPosition: any;
    lockVisible: any;
    lockPinned: any;
    unSortIcon: any;
    suppressSizeToFit: any;
    suppressResize: any;
    suppressAutoSize: any;
    enableRowGroup: any;
    enablePivot: any;
    enableValue: any;
    editable: any;
    suppressPaste: any;
    suppressNavigable: any;
    enableCellChangeFlash: any;
    rowDrag: any;
    dndSource: any;
    autoHeight: any;
    sortable: any;
    resizable: any;
    singleClickEdit: any;
    floatingFilter: any;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<AgGridColumn, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<AgGridColumn, "ag-grid-column", never, { "children": "children"; "sortingOrder": "sortingOrder"; "allowedAggFuncs": "allowedAggFuncs"; "menuTabs": "menuTabs"; "cellClassRules": "cellClassRules"; "icons": "icons"; "headerGroupComponent": "headerGroupComponent"; "headerGroupComponentFramework": "headerGroupComponentFramework"; "headerGroupComponentParams": "headerGroupComponentParams"; "cellStyle": "cellStyle"; "cellRendererParams": "cellRendererParams"; "cellEditorFramework": "cellEditorFramework"; "cellEditorParams": "cellEditorParams"; "pinnedRowCellRendererFramework": "pinnedRowCellRendererFramework"; "pinnedRowCellRendererParams": "pinnedRowCellRendererParams"; "filterFramework": "filterFramework"; "filterParams": "filterParams"; "headerComponent": "headerComponent"; "headerComponentFramework": "headerComponentFramework"; "headerComponentParams": "headerComponentParams"; "floatingFilterComponent": "floatingFilterComponent"; "floatingFilterComponentParams": "floatingFilterComponentParams"; "floatingFilterComponentFramework": "floatingFilterComponentFramework"; "tooltipComponent": "tooltipComponent"; "tooltipComponentParams": "tooltipComponentParams"; "tooltipComponentFramework": "tooltipComponentFramework"; "refData": "refData"; "headerName": "headerName"; "columnGroupShow": "columnGroupShow"; "headerClass": "headerClass"; "toolPanelClass": "toolPanelClass"; "headerValueGetter": "headerValueGetter"; "groupId": "groupId"; "colId": "colId"; "sort": "sort"; "field": "field"; "type": "type"; "tooltipField": "tooltipField"; "headerTooltip": "headerTooltip"; "cellClass": "cellClass"; "showRowGroup": "showRowGroup"; "filter": "filter"; "aggFunc": "aggFunc"; "cellRenderer": "cellRenderer"; "cellEditor": "cellEditor"; "pinned": "pinned"; "chartDataType": "chartDataType"; "sortedAt": "sortedAt"; "flex": "flex"; "width": "width"; "minWidth": "minWidth"; "maxWidth": "maxWidth"; "rowGroupIndex": "rowGroupIndex"; "pivotIndex": "pivotIndex"; "dndSourceOnRowDrag": "dndSourceOnRowDrag"; "valueGetter": "valueGetter"; "valueSetter": "valueSetter"; "filterValueGetter": "filterValueGetter"; "keyCreator": "keyCreator"; "cellRendererFramework": "cellRendererFramework"; "pinnedRowCellRenderer": "pinnedRowCellRenderer"; "valueFormatter": "valueFormatter"; "pinnedRowValueFormatter": "pinnedRowValueFormatter"; "valueParser": "valueParser"; "comparator": "comparator"; "equals": "equals"; "pivotComparator": "pivotComparator"; "suppressKeyboardEvent": "suppressKeyboardEvent"; "colSpan": "colSpan"; "rowSpan": "rowSpan"; "getQuickFilterText": "getQuickFilterText"; "newValueHandler": "newValueHandler"; "onCellValueChanged": "onCellValueChanged"; "onCellClicked": "onCellClicked"; "onCellDoubleClicked": "onCellDoubleClicked"; "onCellContextMenu": "onCellContextMenu"; "rowDragText": "rowDragText"; "tooltip": "tooltip"; "tooltipValueGetter": "tooltipValueGetter"; "cellRendererSelector": "cellRendererSelector"; "cellEditorSelector": "cellEditorSelector"; "suppressCellFlash": "suppressCellFlash"; "suppressColumnsToolPanel": "suppressColumnsToolPanel"; "suppressFiltersToolPanel": "suppressFiltersToolPanel"; "openByDefault": "openByDefault"; "marryChildren": "marryChildren"; "hide": "hide"; "rowGroup": "rowGroup"; "pivot": "pivot"; "checkboxSelection": "checkboxSelection"; "headerCheckboxSelection": "headerCheckboxSelection"; "headerCheckboxSelectionFilteredOnly": "headerCheckboxSelectionFilteredOnly"; "suppressMenu": "suppressMenu"; "suppressSorting": "suppressSorting"; "suppressMovable": "suppressMovable"; "suppressFilter": "suppressFilter"; "lockPosition": "lockPosition"; "lockVisible": "lockVisible"; "lockPinned": "lockPinned"; "unSortIcon": "unSortIcon"; "suppressSizeToFit": "suppressSizeToFit"; "suppressResize": "suppressResize"; "suppressAutoSize": "suppressAutoSize"; "enableRowGroup": "enableRowGroup"; "enablePivot": "enablePivot"; "enableValue": "enableValue"; "editable": "editable"; "suppressPaste": "suppressPaste"; "suppressNavigable": "suppressNavigable"; "enableCellChangeFlash": "enableCellChangeFlash"; "rowDrag": "rowDrag"; "dndSource": "dndSource"; "autoHeight": "autoHeight"; "sortable": "sortable"; "resizable": "resizable"; "singleClickEdit": "singleClickEdit"; "floatingFilter": "floatingFilter"; }, {}, ["childColumns"], never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYWctZ3JpZC1jb2x1bW4uY29tcG9uZW50LmQudHMiLCJzb3VyY2VzIjpbImFnLWdyaWQtY29sdW1uLmNvbXBvbmVudC5kLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7O0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7QUFDQSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFF1ZXJ5TGlzdCB9IGZyb20gXCJAYW5ndWxhci9jb3JlXCI7XG5pbXBvcnQgeyBDb2xEZWYgfSBmcm9tIFwiYWctZ3JpZC1jb21tdW5pdHlcIjtcbmV4cG9ydCBkZWNsYXJlIGNsYXNzIEFnR3JpZENvbHVtbiB7XG4gICAgY2hpbGRDb2x1bW5zOiBRdWVyeUxpc3Q8QWdHcmlkQ29sdW1uPjtcbiAgICBoYXNDaGlsZENvbHVtbnMoKTogYm9vbGVhbjtcbiAgICB0b0NvbERlZigpOiBDb2xEZWY7XG4gICAgcHJpdmF0ZSBnZXRDaGlsZENvbERlZnM7XG4gICAgcHJpdmF0ZSBjcmVhdGVDb2xEZWZGcm9tR3JpZENvbHVtbjtcbiAgICBjaGlsZHJlbjogYW55O1xuICAgIHNvcnRpbmdPcmRlcjogYW55O1xuICAgIGFsbG93ZWRBZ2dGdW5jczogYW55O1xuICAgIG1lbnVUYWJzOiBhbnk7XG4gICAgY2VsbENsYXNzUnVsZXM6IGFueTtcbiAgICBpY29uczogYW55O1xuICAgIGhlYWRlckdyb3VwQ29tcG9uZW50OiBhbnk7XG4gICAgaGVhZGVyR3JvdXBDb21wb25lbnRGcmFtZXdvcms6IGFueTtcbiAgICBoZWFkZXJHcm91cENvbXBvbmVudFBhcmFtczogYW55O1xuICAgIGNlbGxTdHlsZTogYW55O1xuICAgIGNlbGxSZW5kZXJlclBhcmFtczogYW55O1xuICAgIGNlbGxFZGl0b3JGcmFtZXdvcms6IGFueTtcbiAgICBjZWxsRWRpdG9yUGFyYW1zOiBhbnk7XG4gICAgcGlubmVkUm93Q2VsbFJlbmRlcmVyRnJhbWV3b3JrOiBhbnk7XG4gICAgcGlubmVkUm93Q2VsbFJlbmRlcmVyUGFyYW1zOiBhbnk7XG4gICAgZmlsdGVyRnJhbWV3b3JrOiBhbnk7XG4gICAgZmlsdGVyUGFyYW1zOiBhbnk7XG4gICAgaGVhZGVyQ29tcG9uZW50OiBhbnk7XG4gICAgaGVhZGVyQ29tcG9uZW50RnJhbWV3b3JrOiBhbnk7XG4gICAgaGVhZGVyQ29tcG9uZW50UGFyYW1zOiBhbnk7XG4gICAgZmxvYXRpbmdGaWx0ZXJDb21wb25lbnQ6IGFueTtcbiAgICBmbG9hdGluZ0ZpbHRlckNvbXBvbmVudFBhcmFtczogYW55O1xuICAgIGZsb2F0aW5nRmlsdGVyQ29tcG9uZW50RnJhbWV3b3JrOiBhbnk7XG4gICAgdG9vbHRpcENvbXBvbmVudDogYW55O1xuICAgIHRvb2x0aXBDb21wb25lbnRQYXJhbXM6IGFueTtcbiAgICB0b29sdGlwQ29tcG9uZW50RnJhbWV3b3JrOiBhbnk7XG4gICAgcmVmRGF0YTogYW55O1xuICAgIGhlYWRlck5hbWU6IGFueTtcbiAgICBjb2x1bW5Hcm91cFNob3c6IGFueTtcbiAgICBoZWFkZXJDbGFzczogYW55O1xuICAgIHRvb2xQYW5lbENsYXNzOiBhbnk7XG4gICAgaGVhZGVyVmFsdWVHZXR0ZXI6IGFueTtcbiAgICBncm91cElkOiBhbnk7XG4gICAgY29sSWQ6IGFueTtcbiAgICBzb3J0OiBhbnk7XG4gICAgZmllbGQ6IGFueTtcbiAgICB0eXBlOiBhbnk7XG4gICAgdG9vbHRpcEZpZWxkOiBhbnk7XG4gICAgaGVhZGVyVG9vbHRpcDogYW55O1xuICAgIGNlbGxDbGFzczogYW55O1xuICAgIHNob3dSb3dHcm91cDogYW55O1xuICAgIGZpbHRlcjogYW55O1xuICAgIGFnZ0Z1bmM6IGFueTtcbiAgICBjZWxsUmVuZGVyZXI6IGFueTtcbiAgICBjZWxsRWRpdG9yOiBhbnk7XG4gICAgcGlubmVkOiBhbnk7XG4gICAgY2hhcnREYXRhVHlwZTogYW55O1xuICAgIHNvcnRlZEF0OiBhbnk7XG4gICAgZmxleDogYW55O1xuICAgIHdpZHRoOiBhbnk7XG4gICAgbWluV2lkdGg6IGFueTtcbiAgICBtYXhXaWR0aDogYW55O1xuICAgIHJvd0dyb3VwSW5kZXg6IGFueTtcbiAgICBwaXZvdEluZGV4OiBhbnk7XG4gICAgZG5kU291cmNlT25Sb3dEcmFnOiBhbnk7XG4gICAgdmFsdWVHZXR0ZXI6IGFueTtcbiAgICB2YWx1ZVNldHRlcjogYW55O1xuICAgIGZpbHRlclZhbHVlR2V0dGVyOiBhbnk7XG4gICAga2V5Q3JlYXRvcjogYW55O1xuICAgIGNlbGxSZW5kZXJlckZyYW1ld29yazogYW55O1xuICAgIHBpbm5lZFJvd0NlbGxSZW5kZXJlcjogYW55O1xuICAgIHZhbHVlRm9ybWF0dGVyOiBhbnk7XG4gICAgcGlubmVkUm93VmFsdWVGb3JtYXR0ZXI6IGFueTtcbiAgICB2YWx1ZVBhcnNlcjogYW55O1xuICAgIGNvbXBhcmF0b3I6IGFueTtcbiAgICBlcXVhbHM6IGFueTtcbiAgICBwaXZvdENvbXBhcmF0b3I6IGFueTtcbiAgICBzdXBwcmVzc0tleWJvYXJkRXZlbnQ6IGFueTtcbiAgICBjb2xTcGFuOiBhbnk7XG4gICAgcm93U3BhbjogYW55O1xuICAgIGdldFF1aWNrRmlsdGVyVGV4dDogYW55O1xuICAgIG5ld1ZhbHVlSGFuZGxlcjogYW55O1xuICAgIG9uQ2VsbFZhbHVlQ2hhbmdlZDogYW55O1xuICAgIG9uQ2VsbENsaWNrZWQ6IGFueTtcbiAgICBvbkNlbGxEb3VibGVDbGlja2VkOiBhbnk7XG4gICAgb25DZWxsQ29udGV4dE1lbnU6IGFueTtcbiAgICByb3dEcmFnVGV4dDogYW55O1xuICAgIHRvb2x0aXA6IGFueTtcbiAgICB0b29sdGlwVmFsdWVHZXR0ZXI6IGFueTtcbiAgICBjZWxsUmVuZGVyZXJTZWxlY3RvcjogYW55O1xuICAgIGNlbGxFZGl0b3JTZWxlY3RvcjogYW55O1xuICAgIHN1cHByZXNzQ2VsbEZsYXNoOiBhbnk7XG4gICAgc3VwcHJlc3NDb2x1bW5zVG9vbFBhbmVsOiBhbnk7XG4gICAgc3VwcHJlc3NGaWx0ZXJzVG9vbFBhbmVsOiBhbnk7XG4gICAgb3BlbkJ5RGVmYXVsdDogYW55O1xuICAgIG1hcnJ5Q2hpbGRyZW46IGFueTtcbiAgICBoaWRlOiBhbnk7XG4gICAgcm93R3JvdXA6IGFueTtcbiAgICBwaXZvdDogYW55O1xuICAgIGNoZWNrYm94U2VsZWN0aW9uOiBhbnk7XG4gICAgaGVhZGVyQ2hlY2tib3hTZWxlY3Rpb246IGFueTtcbiAgICBoZWFkZXJDaGVja2JveFNlbGVjdGlvbkZpbHRlcmVkT25seTogYW55O1xuICAgIHN1cHByZXNzTWVudTogYW55O1xuICAgIHN1cHByZXNzU29ydGluZzogYW55O1xuICAgIHN1cHByZXNzTW92YWJsZTogYW55O1xuICAgIHN1cHByZXNzRmlsdGVyOiBhbnk7XG4gICAgbG9ja1Bvc2l0aW9uOiBhbnk7XG4gICAgbG9ja1Zpc2libGU6IGFueTtcbiAgICBsb2NrUGlubmVkOiBhbnk7XG4gICAgdW5Tb3J0SWNvbjogYW55O1xuICAgIHN1cHByZXNzU2l6ZVRvRml0OiBhbnk7XG4gICAgc3VwcHJlc3NSZXNpemU6IGFueTtcbiAgICBzdXBwcmVzc0F1dG9TaXplOiBhbnk7XG4gICAgZW5hYmxlUm93R3JvdXA6IGFueTtcbiAgICBlbmFibGVQaXZvdDogYW55O1xuICAgIGVuYWJsZVZhbHVlOiBhbnk7XG4gICAgZWRpdGFibGU6IGFueTtcbiAgICBzdXBwcmVzc1Bhc3RlOiBhbnk7XG4gICAgc3VwcHJlc3NOYXZpZ2FibGU6IGFueTtcbiAgICBlbmFibGVDZWxsQ2hhbmdlRmxhc2g6IGFueTtcbiAgICByb3dEcmFnOiBhbnk7XG4gICAgZG5kU291cmNlOiBhbnk7XG4gICAgYXV0b0hlaWdodDogYW55O1xuICAgIHNvcnRhYmxlOiBhbnk7XG4gICAgcmVzaXphYmxlOiBhbnk7XG4gICAgc2luZ2xlQ2xpY2tFZGl0OiBhbnk7XG4gICAgZmxvYXRpbmdGaWx0ZXI6IGFueTtcbn1cbiJdfQ==