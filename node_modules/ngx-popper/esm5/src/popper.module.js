/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { CommonModule } from "@angular/common";
import { NgModule } from "@angular/core";
import { PopperController } from './popper-directive';
import { PopperContent } from './popper-content';
var NgxPopperModule = /** @class */ (function () {
    function NgxPopperModule() {
    }
    /**
     * @return {?}
     */
    NgxPopperModule.prototype.ngDoBootstrap = /**
     * @return {?}
     */
    function () {
    };
    /**
     * @param {?=} popperBaseOptions
     * @return {?}
     */
    NgxPopperModule.forRoot = /**
     * @param {?=} popperBaseOptions
     * @return {?}
     */
    function (popperBaseOptions) {
        if (popperBaseOptions === void 0) { popperBaseOptions = {}; }
        return { ngModule: NgxPopperModule, providers: [{ provide: 'popperDefaults', useValue: popperBaseOptions }] };
    };
    NgxPopperModule.decorators = [
        { type: NgModule, args: [{
                    imports: [
                        CommonModule
                    ],
                    declarations: [
                        PopperController,
                        PopperContent
                    ],
                    exports: [
                        PopperController,
                        PopperContent
                    ],
                    entryComponents: [
                        PopperContent
                    ]
                },] }
    ];
    return NgxPopperModule;
}());
export { NgxPopperModule };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicG9wcGVyLm1vZHVsZS5qcyIsInNvdXJjZVJvb3QiOiJuZzovL25neC1wb3BwZXIvIiwic291cmNlcyI6WyJzcmMvcG9wcGVyLm1vZHVsZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUFDLFlBQVksRUFBQyxNQUFNLGlCQUFpQixDQUFDO0FBQzdDLE9BQU8sRUFBc0IsUUFBUSxFQUFDLE1BQU0sZUFBZSxDQUFDO0FBRTVELE9BQU8sRUFBQyxnQkFBZ0IsRUFBQyxNQUFNLG9CQUFvQixDQUFDO0FBQ3BELE9BQU8sRUFBQyxhQUFhLEVBQUMsTUFBTSxrQkFBa0IsQ0FBQztBQUUvQztJQUFBO0lBdUJBLENBQUM7Ozs7SUFOQyx1Q0FBYTs7O0lBQWI7SUFDQSxDQUFDOzs7OztJQUVhLHVCQUFPOzs7O0lBQXJCLFVBQXNCLGlCQUE0QztRQUE1QyxrQ0FBQSxFQUFBLHNCQUE0QztRQUNoRSxPQUFPLEVBQUMsUUFBUSxFQUFFLGVBQWUsRUFBRSxTQUFTLEVBQUUsQ0FBQyxFQUFDLE9BQU8sRUFBRSxnQkFBZ0IsRUFBRSxRQUFRLEVBQUUsaUJBQWlCLEVBQUMsQ0FBQyxFQUFDLENBQUM7SUFDNUcsQ0FBQzs7Z0JBdEJGLFFBQVEsU0FBQztvQkFDUixPQUFPLEVBQUU7d0JBQ1AsWUFBWTtxQkFDYjtvQkFDRCxZQUFZLEVBQUU7d0JBQ1osZ0JBQWdCO3dCQUNoQixhQUFhO3FCQUNkO29CQUNELE9BQU8sRUFBRTt3QkFDUCxnQkFBZ0I7d0JBQ2hCLGFBQWE7cUJBQ2Q7b0JBQ0QsZUFBZSxFQUFFO3dCQUNmLGFBQWE7cUJBQ2Q7aUJBQ0Y7O0lBUUQsc0JBQUM7Q0FBQSxBQXZCRCxJQXVCQztTQVBZLGVBQWUiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge0NvbW1vbk1vZHVsZX0gZnJvbSBcIkBhbmd1bGFyL2NvbW1vblwiO1xuaW1wb3J0IHtNb2R1bGVXaXRoUHJvdmlkZXJzLCBOZ01vZHVsZX0gZnJvbSBcIkBhbmd1bGFyL2NvcmVcIjtcbmltcG9ydCB7UG9wcGVyQ29udGVudE9wdGlvbnN9IGZyb20gJy4vcG9wcGVyLW1vZGVsJztcbmltcG9ydCB7UG9wcGVyQ29udHJvbGxlcn0gZnJvbSAnLi9wb3BwZXItZGlyZWN0aXZlJztcbmltcG9ydCB7UG9wcGVyQ29udGVudH0gZnJvbSAnLi9wb3BwZXItY29udGVudCc7XG5cbkBOZ01vZHVsZSh7XG4gIGltcG9ydHM6IFtcbiAgICBDb21tb25Nb2R1bGVcbiAgXSxcbiAgZGVjbGFyYXRpb25zOiBbXG4gICAgUG9wcGVyQ29udHJvbGxlcixcbiAgICBQb3BwZXJDb250ZW50XG4gIF0sXG4gIGV4cG9ydHM6IFtcbiAgICBQb3BwZXJDb250cm9sbGVyLFxuICAgIFBvcHBlckNvbnRlbnRcbiAgXSxcbiAgZW50cnlDb21wb25lbnRzOiBbXG4gICAgUG9wcGVyQ29udGVudFxuICBdXG59KVxuZXhwb3J0IGNsYXNzIE5neFBvcHBlck1vZHVsZSB7XG4gIG5nRG9Cb290c3RyYXAoKSB7XG4gIH1cblxuICBwdWJsaWMgc3RhdGljIGZvclJvb3QocG9wcGVyQmFzZU9wdGlvbnM6IFBvcHBlckNvbnRlbnRPcHRpb25zID0ge30pOiBNb2R1bGVXaXRoUHJvdmlkZXJzIHtcbiAgICByZXR1cm4ge25nTW9kdWxlOiBOZ3hQb3BwZXJNb2R1bGUsIHByb3ZpZGVyczogW3twcm92aWRlOiAncG9wcGVyRGVmYXVsdHMnLCB1c2VWYWx1ZTogcG9wcGVyQmFzZU9wdGlvbnN9XX07XG4gIH1cbn0iXX0=