import { ViewContainerRef, ComponentFactoryResolver, OnChanges, SimpleChange, OnDestroy, EventEmitter, OnInit, Renderer2, ChangeDetectorRef, ElementRef } from '@angular/core';
import { Placement, PopperContentOptions, Trigger } from './popper-model';
import { PopperContent } from './popper-content';
export declare class PopperController implements OnInit, OnDestroy, OnChanges {
    private viewContainerRef;
    private changeDetectorRef;
    private resolver;
    private elementRef;
    private renderer;
    private popperDefaults;
    private popperContentClass;
    private popperContentRef;
    private shown;
    private scheduledShowTimeout;
    private scheduledHideTimeout;
    private subscriptions;
    private eventListeners;
    private globalEventListeners;
    private popperContent;
    constructor(viewContainerRef: ViewContainerRef, changeDetectorRef: ChangeDetectorRef, resolver: ComponentFactoryResolver, elementRef: ElementRef, renderer: Renderer2, popperDefaults?: PopperContentOptions);
    static baseOptions: PopperContentOptions;
    content: string | PopperContent;
    disabled: boolean;
    placement: Placement;
    showTrigger: Trigger | undefined;
    targetElement: HTMLElement;
    showDelay: number | undefined;
    hideTimeout: number;
    timeoutAfterShow: number;
    boundariesElement: string;
    showOnStart: boolean;
    closeOnClickOutside: boolean;
    hideOnClickOutside: boolean | undefined;
    hideOnScroll: boolean | undefined;
    hideOnMouseLeave: boolean | undefined;
    positionFixed: boolean;
    popperModifiers: {};
    disableStyle: boolean;
    disableAnimation: boolean;
    applyClass: string;
    applyArrowClass: string;
    ariaDescribe: string | undefined;
    ariaRole: string | undefined;
    styles: Object | undefined;
    appendTo: string;
    preventOverflow: boolean;
    popperOnShown: EventEmitter<PopperController>;
    popperOnHidden: EventEmitter<PopperController>;
    popperOnUpdate: EventEmitter<any>;
    hideOnClickOutsideHandler($event: MouseEvent): void;
    hideOnScrollHandler($event: MouseEvent): void;
    applyTriggerListeners(): void;
    static assignDefined(target: any, ...sources: any[]): any;
    ngOnInit(): void;
    ngOnChanges(changes: {
        [propertyName: string]: SimpleChange;
    }): void;
    ngOnDestroy(): void;
    toggle(): void;
    show(): void;
    hide(): void;
    scheduledShow(delay?: number | undefined): void;
    scheduledHide($event?: any, delay?: number): void;
    getRefElement(): any;
    private applyChanges;
    private setDefaults;
    private clearEventListeners;
    private clearGlobalEventListeners;
    private overrideShowTimeout;
    private overrideHideTimeout;
    private constructContent;
    private setContentProperties;
    private getScrollParent;
    private onPopperUpdate;
}
